package com.liang.datastructure;

/**
 * @Title java实现红黑树
 * 
 * @Description 红黑树是一种带有颜色的二叉树，它要求：
 * 				1.每个结点要么是红色要么是黑色
 * 				2.根结点和所有叶子结点都是黑色的（此处的叶子结点是没有赋值的结点）
 * 				3.每个红色结点必须有两个黑色的子结点（即没有两个连续的红色结点是父子关系）
 * 				4.从任一个结点到任一叶子结点的路径上都包含相同数量的黑色结点
 * 				以上这些约束限制了红黑树从根到叶子的最长可能路径不会多于最短可能路径的两倍，结果使红黑树在大致上是平衡的，
 * 				保证了插入、删除和查找操作的最坏情况的时间复杂度是O（logn）
 * 
 * @Operation 1.左旋右旋：旋转的目的是为了让树保持红黑树的特性，即满足以上五个必要条件。
 * 				左旋右旋的过程示意图详见Readme
 * 			  
 * @Date 2016年4月1日 下午10:15:42
 */
public class R_BTree {

}
